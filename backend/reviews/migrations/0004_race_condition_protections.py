# Generated by Django to add race condition protections

from django.db import migrations, models


class Migration(migrations.Migration):
    atomic = False  # Required for CREATE INDEX CONCURRENTLY

    dependencies = [
        ('reviews', '0003_alter_review_status'),
    ]

    operations = [
        # Add database constraints to prevent race conditions
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION check_review_approval_constraint()
            RETURNS TRIGGER AS $$
            BEGIN
                -- Prevent approvals on non-pending reviews
                IF (SELECT status FROM reviews WHERE id = NEW.review_id) != 'pending' THEN
                    RAISE EXCEPTION 'Cannot add approval to non-pending review';
                END IF;
                
                -- Prevent multiple approvals from same supervisor
                IF EXISTS (
                    SELECT 1 FROM reviews_reviewapproval 
                    WHERE review_id = NEW.review_id AND supervisor_id = NEW.supervisor_id AND id != NEW.id
                ) THEN
                    RAISE EXCEPTION 'Supervisor has already voted on this review';
                END IF;
                
                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
            """,
            reverse_sql="""
            DROP FUNCTION IF EXISTS check_review_approval_constraint();
            """
        ),
        
        migrations.RunSQL(
            """
            DROP TRIGGER IF EXISTS review_approval_constraint_trigger ON reviews_reviewapproval;
            CREATE TRIGGER review_approval_constraint_trigger
                BEFORE INSERT OR UPDATE ON reviews_reviewapproval
                FOR EACH ROW
                EXECUTE FUNCTION check_review_approval_constraint();
            """,
            reverse_sql="""
            DROP TRIGGER IF EXISTS review_approval_constraint_trigger ON reviews_reviewapproval;
            """
        ),
        
        # Add index to improve performance on status queries
        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_review_status_created
            ON reviews (status, created_at);
            """,
            reverse_sql="""
            DROP INDEX IF EXISTS idx_review_status_created;
            """
        ),
    ]
