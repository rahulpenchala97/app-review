services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: app_review_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_review_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    # Override the entrypoint to avoid exec format error
    entrypoint: []
    command: >
      bash -c "
        echo 'Waiting for database...' &&
        while ! pg_isready -h db -p 5432 -U postgres; do sleep 2; done &&
        echo 'Database is ready!' &&
        python manage.py migrate --noinput &&
        python manage.py setup_data --skip-sample-data &&
        echo 'Loading real Google Play Store data (FAST)' &&
        python manage.py fast_import_csv &&
        echo 'Setup complete!' &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/*/__pycache__
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-docker-dev-key-change-in-production
      - USE_SQLITE=False
      - DB_NAME=app_review_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    restart: unless-stopped
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - /app/build
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
      - WDS_SOCKET_PATH=/ws
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data:
